Vue.component("vue-section-component",{template:`
        <div v-bind:id="dataId" >
            <div class="cursor-pointer">
                <i class="ion ion-md-apps text-large" 
                    v-show="isShowChangeViewMode"
                    v-bind:class="privateIsShowByFolderMode == false ? 'text-primary' : ''"
                    v-on:click="selectView(false)"></i>
                <i class="ion ion-ios-list text-large px-1"
                    v-show="isShowChangeViewMode"
                    v-bind:class="privateIsShowByFolderMode == true ? 'text-primary' : ''"
                    v-on:click="selectView(true)"></i>
                <input type='search' style="max-width: 85%;display: inline;padding-top: 9px;"
                    name="sectionSearch"
                    v-model="searchText"
                    class="form-control form-control-sm mb-1"
                    v-on:input="onsearch" 
                    v-show="isShowFilter"/>
              </div>

                <div class="cards"
                     v-if="!privateIsShowByFolderMode"
                     v-bind:style="searchText ? '' : dataRecordsStyle"
                     v-bind:class="dataClass">
                    <div class="card-section card"
                         v-for="(section, index) in sections"
                         v-bind:key="section.id"
                         v-on:click="onSelect(section)"
                         v-bind:title="section.description"
                         v-show="section.isShow"
                         v-bind:style="'color: '+ section.cssColor +';background-color: '+ section.cssBackground"
                         v-bind:class="[section.isSelected  ? 'selected-section' : 'not-selected-section', dataSectionClasses ]">
                        <span class="selected-section-count">{{ checkCountSelected(section) }}</span>
                        <div class="cards-container d-flex align-items-center ">
                            <i class="icon-large opacity-75" v-bind:class="section.cssIcon"></i>
                            <div class="card-section-text ml-2">
                                <div class="section-name">{{section.name}}</div>
                                <div class="area-name opacity-75" style="margin-top: -5px;">
                                    {{ section.areaName }}
                                    <div class="ml-2" style="display: inline-block;"
                                         v-show="section.collectiveSections && section.collectiveSections.length > 0">
                                        <i class="oi oi-layers"></i> +{{ section.collectiveSections ? section.collectiveSections.length : "0"}}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-default card-section text-big" style="box-shadow: none;"
                            v-show="privateIsHideMoreThenOneSections && sections.length > 2"
                            v-on:click="showAllSections">
                        +{{ sections.length - 1 }}
                    </button>
                </div>            

                <div class="ps1 ps--active-y" 
                    v-else=""
                     v-bind:style="searchText ? '' : dataRecordsStyle">
                    <div v-for="area in areas">
                    <div class="d-flex flex-wrap justify-content-between align-items-center ui-bordered1">
                        <div class="d-flex flex-wrap align-items-center">
                            <a data-toggle="collapse" v-bind:href="'#order-' + area.areaID" class="d-block ml-3 collapsed" aria-expanded="true">
                                <i class="collapse-icon" style=" display: inline-block;"></i>
                                <strong class="ml-2"
                                    v-bind:class="privateModeClass">{{ area.areaName }}</strong>
                            </a>
                        </div>
                    </div>
                    <div class="collapse cards cards-small show" 
                        v-bind:id="'order-' + area.areaID" 
                        v-bind:class="dataClass">
                    <div class="card-section card"
                         v-for="(section, index) in area.sections"
                         v-bind:key="section.id"
                         v-on:click="onSelect(section)"
                         v-bind:title="section.description"
                         v-show="section.isShow"
                         v-bind:style="'color: '+ section.cssColor +';background-color: '+ section.cssBackground"
                         v-bind:class="[section.isSelected  ? 'selected-section' : 'not-selected-section', dataSectionClasses ]">
                        <span class="selected-section-count">{{ checkCountSelected(section) }}</span>
                        <div class="cards-container d-flex align-items-center ">
                            <i class="icon-large opacity-75" v-bind:class="section.cssIcon"></i>
                            <div class="card-section-text ml-2">
                                <div class="section-name">{{section.name}}</div>
                                <div class="area-name opacity-75" style="margin-top: -5px;">
                                    {{ section.areaName }}
                                    <div class="ml-2" style="display: inline-block;" 
                                        v-show="section.collectiveSections && section.collectiveSections.length > 0">
                                        <i class="oi oi-layers"></i> +{{ section.collectiveSections ? section.collectiveSections.length : "0"}}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-default card-section text-big" style="box-shadow: none;" 
                        v-show="privateIsHideMoreThenOneSections && sections.length > 2"
                        v-on:click="showAllSections">+{{ sections.length - 1 }}</button>
                    </div>
                </div>
            </div>

        </div>`,props:{dataSearchId:String,dataId:String,name:{type:String,"default":"section-component"},onchoose:Event,onUpdateView:Event,isShowFilter:{type:Boolean,"default":!1},dataItems:Array,dataRecordsStyle:{type:String,"default":""},dataClass:{type:String,"default":"cards-small"},dataSelectedItemsCount:Array,dataIsSelection:{type:Boolean,"default":!1},dataSectionClasses:{type:String,"default":"cursor-pointer"},isHideMoreThenOneSections:{type:Boolean,"default":!1},isShowByFolderMode:{type:Boolean,"default":!1},isShowChangeViewMode:{type:Boolean,deafult:!1}},data:function(){return{count:0,sections:[],areas:[],searchText:null,privateIsHideMoreThenOneSections:!1,privateIsShowByFolderMode:!1,privateModeClass:themeSettings.isDarkStyle()?"theme-text-white":"theme-text-dark"}},watch:{dataItems:function(){this.updateSections()}},mounted:function(){this.privateIsHideMoreThenOneSections=this.isHideMoreThenOneSections;let n=localStorage.getItem(document.location.pathname+"_IsShowByFolderMode");this.privateIsShowByFolderMode=this.isShowChangeViewMode&&n!=null?n=="true":this.isShowByFolderMode;this.dataItems==undefined?this.load():this.updateSections()},methods:{load:function(){return $.ajax({type:"GET",url:"/Section/GetSectins",data:null,contentType:"application/json; charset=utf-8",dataType:"json",context:this,success:function(n){return n.isOk&&(this.sections=n.sections,this.updateAreas()),n},error:function(n,t,i){console.log(i)}},this)},onsearch:function(n){let i=n.target.value.toLocaleLowerCase();for(var t=0;t<this.sections.length;t++)this.sections[t].isShow=this.sections[t].name.toLocaleLowerCase().indexOf(i)>=0},updateSections:function(n){if(this.sections=n?n:this.dataItems,this.privateIsHideMoreThenOneSections)for(var t=1;t<this.sections.length;t++)this.sections[t].isShow=!1;this.updateAreas();this.$forceUpdate()},updateAreas:function(){this.areas=[];for(var n=0;n<this.sections.length;n++){let t=this.areas.findIndex(t=>t.areaID==this.sections[n].areaID);t==-1?this.areas.push({areaID:this.sections[n].areaID,areaName:this.sections[n].areaName,sections:[this.sections[n]]}):this.areas[t].sections.push(this.sections[n])}},checkCountSelected:function(n){if(this.dataSelectedItemsCount&&this.dataSelectedItemsCount.length>0){let t=this.dataSelectedItemsCount.filter(t=>t.id==n.id);if(t&&t.length>0)return t[0].count}return""},clearSearchTextValue:function(){this.searchText=null;for(var n=0;n<this.sections.length;n++)this.sections[n].isShow=!0},onSelect:function(n){this.dataIsSelection&&(n.isSelected=!n.isSelected);this.$emit("onchoose",n)},selectAllSections:function(){for(var n=0;n<this.sections.length;n++)if(this.sections[n].isSelected==!1)this.onSelect(this.sections[n])},showAllSections:function(){this.privateIsHideMoreThenOneSections=!1;for(var n=1;n<this.sections.length;n++)this.sections[n].isShow=!0;this.$emit("on-update-view",!0)},selectView:function(n){this.privateIsShowByFolderMode=n;localStorage.setItem(document.location.pathname+"_IsShowByFolderMode",n)}}});