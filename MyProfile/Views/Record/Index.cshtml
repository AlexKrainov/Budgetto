@{
	ViewData["Title"] = "DataTables - Tables";
}

@section Styles {
	<link rel="stylesheet" href="~/vendor/libs/select2/select2.css">
	<link href="~/vendor/libs/tagify/dist/tagify.css" rel="stylesheet" />
	@*<link rel="stylesheet" href="~/vendor/libs/bootstrap-tagsinput/bootstrap-tagsinput.css">*@
}

@section Scripts {
	<!-- Dependencies -->
	<script src="~/vendor/libs/select2/select2.js"></script>

	<script src="~/app_js/vue-components/vue-section-component.js"></script>

	@*<script src="~/vendor/libs/bootstrap-tagsinput/bootstrap-tagsinput.js"></script>*@
	<script src="~/vendor/libs/tagify/dist/tagify.min.js"></script>
	<script src="~/vendor/libs/filtrex/src/filtrex.js"></script>


	<script>
		var RecoredVue = new Vue({
			el: "#record",
			data: {
				sections: [],
				dateTimeOfPayment: null,
				money: null,
				description: null,
				searchSection: null,

				money: [], //{type: 'number', value: 300}
				records: [],
				tagify: null,
				total: 0,
				flatpickr: null,
			},
			mounted: function () {

				this.flatpickr = flatpickr('#record-date', {
					altInput: true,
					//dateFormat: 'd.m.Y',
					defaultDate: Date.now()
				});
				//https://github.com/yairEO/tagify#events
				//https://yaireo.github.io/tagify/
				//https://rawgit.com/joewalnes/filtrex/master/example/colorize.html
				//https://github.com/joewalnes/filtrex/blob/master/example/colorize.js
				var elementMoney = document.getElementById("money");
				this.tagify = new Tagify(elementMoney, {
					transformTag: this.transformTag,
					duplicates: true,
				});

				this.tagify.on('remove', this.removeTag);
			},
			methods: {
				transformTag: function (item) {
					console.log(item);

					let total;
					let isShow = false;

					try {
						let func = compileExpression(item.value);
						total = func("1");
						if (total) {
							item.style = "--tag-bg: #02BC77";
							isShow = true;
						} else {
							item.style = "--tag-bg: #d9534f";
						}
					} catch (e) {
						item.style = "--tag-bg: #d9534f";
					}

					if (total) {
						total = Math.round(total * 100) / 100;
					}

					RecoredVue.records.push(
						{
							isShow: isShow,
							money: total,
							tag: item.value,
							sectionID: -1,
							sectionName: ""
						});
				},
				removeTag: function (event) {
					if (event.detail.data&& event.detail.data.value) {
						let removeIndex = RecoredVue.records.findIndex(x => x.tag == event.detail.data.value);
						if (removeIndex >= 0) {
							RecoredVue.records.splice(removeIndex, 1);
						}
					}
				},
				save: function () {
					let obj = {
						dateTimeOfPayment: RecoredVue.flatpickr.latestSelectedDateObj.toJSON(),
						records: this.records
					}
					return sendAjax("/Record/SaveRecords", obj, "POST")
						.then(function (result) {
							if (result.isOk = true) {
								for (var i = 0; i < result.budgetRecord.records.length; i++) {
									let record = result.budgetRecord.records[i];
									if (record.isSaved) {
										let index = RecoredVue.tagify.getTagIndexByValue(record.tag);
										if (index >= 0) {
											RecoredVue.tagify.removeTag(record.tag);
										}
									}
								}

							}
						});
				},
				onChooseSection: function (section) {
					let record = this.records.find(x => x.isShow && x.sectionID == -1);

					if (record) {
						record.sectionID = section.id;
						record.sectionName = section.name
					}
				},
				getMoney: function (money) {
					return '= ' + numberOfThreeDigits(money)
				}
			}
		});

	</script>
}
<div class="row">
	<div class="col-6">
		<div class="card mb-4" id="record">
			<h6 class="card-header with-elements">
				<div class="card-header-title">Tasks</div>
				<div class="card-header-elements ml-auto">
					<button type="button" class="btn btn-default btn-xs md-btn-flat">Show more</button>
				</div>
			</h6>
			<div id="tasks-inner" class="ps ps--active-y">
				<div class="card-body">
					<div class="form-row">
						<div class="form-group col">
							<label class="form-label">Date</label>
							<input type="text" class="form-control" id="record-date" v-model="dateTimeOfPayment">
						</div>
					</div>

					<div class="form-row">
						<div class="form-group col">
							<label class="form-label">Money</label>
							<div class="input-group">
								<input type="text" class="form-control" v-model="money" id="money" data-role="tagsinput">
								<div class="input-group-prepend">
									<span v-on:click="" class="input-group-text cursor-pointer"><i class="fa fa-ruble-sign"></i></span>
								</div>
								<div class="input-group-prepend">
									<span class="input-group-text cursor-pointer text-muted"><i class="fa fa-dollar-sign"></i></span>
								</div>
								<div class="input-group-prepend">
									<span class="input-group-text cursor-pointer text-muted"><i class="fa fa-euro-sign"></i></span>
								</div>
							</div>
						</div>
					</div>
					<div class="form-row">
						<div class="form-group col-6">
							<div class="row" v-for="record in records" v-show="record.isShow">
								<div class="col-6 mb-3">
									{{ record.tag }}
									{{ record.tag != record.money ? getMoney(record.money) : '' }}
									<span class="text-muted"></span>
								</div>
								<div class="col-6 mb-3 ">
									<span class="text-muted">{{ record.sectionName }} </span>
									<span class="fa fa-trash remove-section-icon cursor-pointer ml-1"
										  v-on:click="record.sectionID = -1; record.sectionName = '';"
										  v-show="record.sectionName"></span>
								</div>
							</div>
							@*
								<hr />
									<div class="row">
									<div class="col-6 mb-3">{{ total }}</div>
									<div class="col-6 mb-3">
										<span class="text-muted">Total</span>
									</div>
								</div>*@
						</div>
						<div class="form-group col-6">
							@*<label class="form-label">Choose section</label>*@
							<vue-section-component id="test2"
												   name="test"
												   data-search-id="searchSection"
												   data-search-style="max-width: 300px;"
												   v-on:onchoose="onChooseSection"></vue-section-component>
						</div>
					</div>
					<div class="form-row">
						<div class="form-group col">
							<label class="form-label">Description</label>
							<div class="input-group">

								<textarea v-model="description" class="form-control"></textarea>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="card-footer">
				<button type="button" class="btn btn-primary" v-on:click="save">Add</button>
			</div>
		</div>
	</div>
</div>